{
    "openapi": "3.0.0",
    "info": {
        "title": "My API",
        "description": "This is a sample API documentation.",
        "contact": {
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/get-gpt-advice-by-image": {
            "post": {
                "tags": [
                    "OpenAI"
                ],
                "summary": "Get GPT advice based on image",
                "description": "Upload an image file to get advice or a response from GPT.",
                "operationId": "b74b2fc320afde35aee11609f0501e7a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "The image file to send for analysis.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with GPT advice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "advice": {
                                            "description": "Advice or response from GPT",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request, e.g., if the file is missing or invalid"
                    },
                    "500": {
                        "description": "Server Error, if something goes wrong on the server side"
                    }
                }
            }
        },
        "/api/get-gpt-random-pick": {
            "post": {
                "tags": [
                    "OpenAI"
                ],
                "summary": "Get GPT Random Pick",
                "description": "This endpoint sends a request to OpenAI GPT to pick a random response based on the input level.",
                "operationId": "gptRandomPick",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "response_level": {
                                        "description": "The level of response expected from GPT (e.g., 'easy', 'medium', 'hard')",
                                        "type": "string",
                                        "example": "medium"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Random response selected"
                                        },
                                        "response_data": {
                                            "description": "Details of the random pick",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/get-gpt-advice-by-text": {
            "post": {
                "tags": [
                    "OpenAI"
                ],
                "summary": "Get GPT advice based on text messages",
                "description": "Send a series of text messages to GPT-4 along with a response level and receive advice or responses.",
                "operationId": "6710af5fbb337204eb36db1a42b8e1f0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "messages",
                                    "response_level"
                                ],
                                "properties": {
                                    "messages": {
                                        "description": "Array of text messages to send to GPT",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "role": {
                                                    "type": "string",
                                                    "example": "my friend"
                                                },
                                                "text": {
                                                    "type": "string",
                                                    "example": "I wish I had barbercue for a lunch"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "response_level": {
                                        "description": "The level of response detail you want from GPT",
                                        "type": "string",
                                        "example": "medium"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with GPT advice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "description": "Advice or response from GPT",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request, e.g., if messages or response level are missing or invalid"
                    },
                    "500": {
                        "description": "Server Error, if something goes wrong on the server side"
                    }
                }
            }
        },
        "/api/google-lens/get-results": {
            "post": {
                "tags": [
                    "Google Lens"
                ],
                "summary": "Send image to Google Lens",
                "description": "Uploads an image file to be processed by Google Lens.",
                "operationId": "c7026875d15b687cf72677ba34820a73",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "The image file to be processed",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with results from Google Lens",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "description": "Result of the Google Lens analysis",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request, e.g., if the file is missing or invalid"
                    },
                    "500": {
                        "description": "Server Error, if something goes wrong on the server side"
                    }
                }
            }
        },
        "/api/get-detect-object": {
            "post": {
                "tags": [
                    "Google Lens"
                ],
                "summary": "Detect and recognize an object from an image using GPT-4",
                "description": "This endpoint accepts an image URL and language as input, uses GPT-4 to recognize objects in the image, and returns detailed information about the object.",
                "operationId": "911ad8ef1bdf8d6fa1e820b54acad69e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "url": {
                                        "description": "The URL of the image to analyze",
                                        "type": "string",
                                        "example": "https://example.com/image.jpg"
                                    },
                                    "language": {
                                        "description": "The language in which the response should be returned",
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "labels": {
                                            "description": "The recognized object labels",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "did_you_know": {
                                            "description": "Interesting facts about the recognized object",
                                            "type": "string"
                                        },
                                        "price": {
                                            "description": "Price of the recognized object, if applicable",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the recognized object",
                                            "type": "string"
                                        },
                                        "facts": {
                                            "description": "Additional facts about the recognized object",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "OpenAI",
            "description": "OpenAI"
        },
        {
            "name": "Google Lens",
            "description": "Google Lens"
        }
    ]
}